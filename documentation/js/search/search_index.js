var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.116,1,1.646]],["body/controllers/AppController.html",[0,1.744,1,2.572,2,1.22,3,0.449,4,0.449,5,0.369,6,2.79,7,0.449,8,1.361,9,4.059,10,1.564,11,0.048,12,0.832,13,3.445,14,1.077,15,1.199,16,0.676,17,0.832,18,2.166,19,2.79,20,0.535,21,0.369,22,2.036,23,1.564,24,1.564,25,3.445,26,0.037,27,0.037]],["title/modules/AppModule.html",[28,1.264,29,1.646]],["body/modules/AppModule.html",[1,2.576,2,1.365,3,0.373,4,0.373,5,0.306,11,0.048,16,0.796,17,0.691,18,2.278,19,2.316,20,0.444,21,0.306,26,0.033,27,0.033,28,1.75,29,3.155,30,1.298,31,1.75,32,2.316,33,2.316,34,2.316,35,2.59,36,2.01,37,2.277,38,1.69,39,1.69,40,2.859,41,2.638,42,2.638,43,2.859,44,2.859,45,1.957,46,1.298,47,1.957,48,2.316,49,2.859]],["title/injectables/AppService.html",[18,1.264,50,0.871]],["body/injectables/AppService.html",[3,0.473,4,0.473,5,0.389,7,0.473,8,1.406,9,4.136,11,0.047,12,0.877,14,1.135,15,1.239,16,0.564,17,0.877,18,2.042,20,0.564,21,0.389,24,1.648,26,0.039,27,0.039,50,1.406,51,1.874,52,2.94,53,3.631,54,3.631,55,3.631]],["title/injectables/AuthMiddleware.html",[50,0.871,56,1.646]],["body/injectables/AuthMiddleware.html",[3,0.346,4,0.346,5,0.284,7,0.346,8,1.145,11,0.048,12,0.885,14,0.83,16,0.702,17,0.641,20,0.412,21,0.284,22,1.569,23,1.205,26,0.031,27,0.031,36,1.064,47,1.817,50,1.145,51,1.37,56,2.165,57,2.15,58,3.663,59,1.817,60,2.15,61,2.899,62,2.654,63,1.468,64,0.885,65,0.666,66,1.468,67,3.663,68,3.662,69,4.194,70,4.522,71,4.522,72,4.522,73,2.654,74,2.654,75,2.654,76,2.966,77,3.663,78,3.663,79,2.15,80,1.37,81,2.15,82,2.654,83,2.654,84,2.507,85,1.468,86,1.891,87,2.15,88,2.654,89,2.15,90,2.654,91,2.654,92,2.654]],["title/interfaces/Contact.html",[93,1.437,94,1.116]],["body/interfaces/Contact.html",[3,0.401,4,0.401,5,0.329,7,0.401,11,0.048,15,1.438,16,0.477,20,0.628,26,0.035,27,0.035,64,1.205,65,0.907,85,1.231,86,1.586,93,1.586,94,1.62,95,2.104,96,2.104,97,3.274,98,3.659,99,2.389,100,2.265,101,2.478,102,1.7,103,2.087,104,1.586,105,1.816,106,2.768,107,2.768]],["title/controllers/ContactController.html",[0,1.116,108,1.437]],["body/controllers/ContactController.html",[0,0.619,2,0.547,3,0.202,4,0.202,5,0.166,7,0.202,8,0.766,10,1.912,11,0.048,12,1.017,14,1.317,15,1.317,16,0.538,17,0.373,20,0.24,21,0.166,22,0.913,23,0.702,24,1.912,26,0.021,27,0.021,63,1.687,64,1.086,65,0.766,66,1.687,94,1.513,101,2.255,102,1.593,108,1.265,109,1.058,110,1.058,111,1.252,112,2.689,113,2.084,114,1.677,115,2.084,116,2.084,117,2.084,118,1.677,119,2.084,120,1.058,121,1.912,122,2.805,123,1.984,124,1.252,125,2.174,126,3.366,127,1.058,128,1.252,129,1.058,130,1.984,131,1.252,132,1.058,133,1.984,134,1.252,135,1.252,136,2.084,137,1.984,138,1.252,139,2.084,140,1.058,141,1.984,142,1.252,143,1.252,144,2.465,145,1.984,146,1.252,147,2.465,148,1.546,149,1.546,150,1.252,151,1.546,152,1.252,153,1.382,154,1.252,155,1.252,156,1.058,157,1.546,158,1.546,159,2.488,160,1.546,161,1.546,162,1.546,163,1.546,164,1.546,165,1.546,166,1.546,167,1.546,168,1.546,169,1.546,170,2.45,171,1.546,172,1.546]],["title/classes/ContactDto.html",[21,0.298,121,1.264]],["body/classes/ContactDto.html",[3,0.443,4,0.443,5,0.364,7,0.443,10,1.959,11,0.047,12,1.042,15,1.188,16,0.527,20,0.527,21,0.462,26,0.037,27,0.037,64,1.145,65,0.785,99,2.549,100,2.152,102,1.528,121,1.959,173,2.326,174,2.751,175,3.494,176,3.398,177,3.398,178,3.398,179,2.751,180,3.494,181,2.751,182,2.326,183,3.398]],["title/modules/ContactModule.html",[28,1.264,35,1.437]],["body/modules/ContactModule.html",[2,1.251,3,0.328,4,0.328,5,0.27,8,0.788,11,0.049,12,0.608,14,0.788,16,0.798,17,0.608,20,0.391,21,0.27,26,0.03,27,0.03,28,1.604,30,1.144,31,1.604,35,2.611,36,1.934,37,2.087,38,1.488,39,1.488,41,2.418,42,2.418,45,1.724,46,1.144,47,1.724,56,1.488,61,1.488,63,1.009,64,0.853,65,0.458,66,1.009,80,1.3,81,2.04,94,1.009,103,1.3,105,2.087,108,2.105,153,2.191,154,2.04,156,1.724,184,2.04,185,2.519,186,2.04,187,2.519,188,2.519,189,3.532,190,4.421,191,2.519,192,2.519,193,3.532,194,2.519,195,2.519,196,1.009,197,2.519,198,2.04,199,2.519]],["title/injectables/ContactService.html",[50,0.871,153,1.264]],["body/injectables/ContactService.html",[3,0.156,4,0.156,5,0.128,7,0.156,8,0.621,11,0.049,12,0.956,14,1.181,15,1.04,16,0.586,17,0.288,20,0.185,21,0.128,23,0.542,24,1.715,26,0.017,27,0.017,46,0.542,50,0.621,51,0.616,59,1.36,63,1.585,64,1.074,65,0.648,66,1.585,68,2.408,84,2.586,85,1.514,86,2.042,89,1.609,94,1.921,101,2.042,102,1.454,104,0.616,112,2.567,113,1.36,114,1.36,115,1.36,116,1.36,117,1.36,118,1.36,119,1.36,120,1.36,121,1.715,125,2.244,126,2.439,127,1.36,129,1.36,132,1.36,136,2.26,139,2.586,140,1.36,152,0.967,153,0.902,155,0.967,156,0.817,159,2.427,200,0.967,201,1.194,202,2.408,203,1.194,204,1.609,205,1.194,206,2.035,207,1.194,208,1.194,209,1.194,210,1.987,211,1.194,212,1.194,213,1.987,214,1.194,215,0.967,216,1.194,217,1.194,218,2.408,219,0.967,220,1.194,221,0.967,222,2.551,223,0.967,224,2.551,225,1.987,226,2.551,227,4.107,228,2.974,229,2.974,230,2.974,231,1.194,232,1.194,233,2.066,234,1.194,235,1.609,236,0.967,237,1.194,238,2.551,239,2.551,240,2.551,241,1.987,242,1.194,243,1.194,244,1.987,245,1.987,246,1.194,247,1.194,248,1.194,249,2.974,250,1.194,251,1.194,252,1.194,253,1.194,254,1.194,255,1.194,256,1.194,257,1.194]],["title/interfaces/User.html",[93,1.437,258,1.437]],["body/interfaces/User.html",[3,0.397,4,0.397,5,0.326,7,0.397,11,0.048,15,1.488,16,0.473,20,0.624,26,0.034,27,0.034,65,0.905,85,1.221,86,1.573,93,1.573,95,2.086,97,3.256,98,3.644,99,2.376,100,2.258,101,2.47,102,1.079,103,2.076,104,1.573,106,2.753,107,3.081,258,2.076,259,2.086,260,2.94,261,1.801,262,2.468]],["title/controllers/UserController.html",[0,1.116,263,1.646]],["body/controllers/UserController.html",[0,1.099,2,0.971,3,0.358,4,0.358,5,0.294,7,0.358,8,1.171,10,1.701,11,0.048,12,0.905,14,1.171,16,0.662,17,0.663,20,0.426,21,0.294,22,1.621,23,1.245,24,1.701,26,0.032,27,0.032,63,1.501,64,0.905,65,0.681,66,1.501,110,1.878,112,2.558,125,2.367,147,2.221,150,2.221,159,2.214,196,1.501,206,2.564,263,2.214,264,2.221,265,2.743,266,3.034,267,3.034,268,2.221,269,2.618,270,3.747,271,2.743,272,2.221,273,3.747,274,2.743,275,2.221,276,2.221,277,2.743,278,2.743,279,2.743,280,2.743,281,2.743,282,2.743]],["title/classes/UserDto.html",[21,0.298,269,1.437]],["body/classes/UserDto.html",[3,0.439,4,0.439,5,0.361,7,0.439,10,1.947,11,0.047,12,1.036,15,1.181,16,0.523,20,0.523,21,0.459,26,0.037,27,0.037,65,0.78,99,2.535,100,2.143,102,1.519,173,2.304,175,3.473,179,2.726,180,3.473,181,2.726,182,2.304,260,2.789,269,2.214,283,2.726,284,3.367,285,3.367,286,3.367,287,3.367,288,3.367,289,3.367]],["title/modules/UserModule.html",[28,1.264,36,1.116]],["body/modules/UserModule.html",[2,1.375,3,0.377,4,0.377,5,0.31,11,0.048,16,0.798,17,0.699,20,0.449,21,0.31,26,0.033,27,0.033,28,1.763,30,1.313,31,1.763,36,2.017,37,2.295,38,1.71,39,1.71,41,2.659,42,1.98,45,1.98,46,1.313,48,2.343,61,1.71,64,0.699,80,1.493,103,1.493,196,2.017,198,2.343,258,1.493,261,2.295,263,2.591,275,2.343,290,2.343,291,2.343,292,2.893,293,2.893,294,2.893,295,2.343,296,2.893,297,2.893,298,2.893,299,2.893,300,2.893,301,2.893]],["title/injectables/UserService.html",[50,0.871,196,1.116]],["body/injectables/UserService.html",[3,0.265,4,0.265,5,0.218,7,0.265,8,0.946,11,0.049,12,0.873,14,0.946,16,0.721,17,0.491,20,0.316,21,0.218,23,1.374,24,1.374,26,0.026,27,0.026,46,0.924,50,0.946,51,1.05,59,2.072,60,1.647,61,2.65,63,1.448,64,0.873,65,0.657,66,1.448,76,1.647,80,1.05,84,2.474,85,1.604,86,2.066,87,2.451,100,1.641,104,1.05,112,2.315,125,1.866,159,2.136,196,1.213,202,3.241,204,2.927,206,2.072,215,1.647,218,1.647,219,1.647,221,2.451,223,1.647,233,2.451,235,1.647,236,1.647,258,2.315,260,1.788,266,2.927,267,2.927,268,2.451,269,2.398,272,2.451,276,1.647,295,1.647,302,1.647,303,2.034,304,2.034,305,2.034,306,2.034,307,3.027,308,2.034,309,2.034,310,2.034,311,2.034,312,3.027,313,3.027,314,2.034,315,2.034,316,2.034,317,2.034]],["title/coverage.html",[318,3.065]],["body/coverage.html",[0,1.736,1,1.67,5,0.303,6,2.289,11,0.047,18,1.283,21,0.41,26,0.033,27,0.033,50,1.452,52,2.289,56,1.67,57,2.289,65,0.514,85,1.133,93,1.974,94,1.133,96,2.617,105,1.67,108,1.459,109,1.935,121,1.283,153,1.283,174,2.289,196,1.133,200,2.289,258,1.459,259,2.617,261,1.67,263,1.67,264,2.289,269,1.459,283,2.289,302,2.289,318,2.289,319,2.827,320,2.827,321,2.827,322,5.481,323,3.824,324,4.643,325,2.827,326,4.334,327,3.824,328,4.334,329,2.827,330,2.289,331,2.827,332,2.289,333,2.827,334,2.827]],["title/dependencies.html",[31,1.519,335,2.333]],["body/dependencies.html",[11,0.048,17,0.836,21,0.468,26,0.037,27,0.037,31,1.571,46,1.571,79,2.803,80,1.787,104,1.787,182,2.369,336,5.021,337,3.461,338,3.461,339,3.461,340,3.461,341,3.461,342,3.461,343,3.461,344,3.461,345,3.461,346,3.461,347,3.461,348,3.461,349,3.461,350,3.461,351,3.461,352,3.461,353,3.461,354,3.461,355,3.461]],["title/miscellaneous/functions.html",[356,1.379,357,2.709]],["body/miscellaneous/functions.html",[7,0.546,11,0.042,26,0.042,27,0.042,330,3.389,332,4.207,356,2.473,357,3.389,358,4.185]],["title/index.html",[7,0.304,359,2.333,360,2.333]],["body/index.html",[2,0.771,3,0.284,4,0.284,5,0.233,7,0.284,8,0.995,10,2.155,11,0.047,12,1.147,14,1.484,15,1.34,26,0.027,27,0.027,63,1.902,64,1.175,65,0.863,66,1.902,94,1.275,101,2.135,102,1.628,108,1.124,109,1.491,110,1.491,111,1.764,112,2.717,113,2.179,114,2.179,115,2.179,116,2.179,117,2.179,118,2.179,119,2.179,120,1.491,121,1.878,122,2.577,123,1.764,124,1.764,125,1.941,126,3.249,127,1.491,128,1.764,129,1.491,130,1.764,131,1.764,132,1.491,133,1.764,134,1.764,135,1.764,136,2.179,137,1.764,138,1.764,139,1.491,140,1.491,141,1.764,142,1.764,143,1.764,144,2.577,145,1.764,146,1.764]],["title/modules.html",[30,1.718]],["body/modules.html",[11,0.041,26,0.041,27,0.041,29,2.366,30,1.818,35,2.067,36,1.604,361,5.1,362,5.1,363,5.1,364,5.1]],["title/overview.html",[365,3.065]],["body/overview.html",[2,1.145,11,0.046,18,2.103,26,0.036,27,0.036,29,3.164,30,1.468,31,1.898,32,2.619,33,2.619,34,2.619,35,2.728,36,2.081,37,2.47,38,1.911,39,1.911,51,1.67,95,2.214,153,2.103,173,2.214,184,2.619,186,2.619,196,1.856,290,2.619,291,2.619,365,2.619,366,4.18,367,3.234,368,4.18]],["title/miscellaneous/variables.html",[356,1.379,369,2.709]],["body/miscellaneous/variables.html",[7,0.435,11,0.048,15,1.175,26,0.037,27,0.037,64,0.806,65,0.901,85,1.709,96,2.284,100,1.936,102,1.51,103,2.201,105,2.52,106,3.391,107,3.504,259,2.284,260,1.971,261,2.52,262,2.702,356,1.971,369,2.702,370,3.336,371,3.336,372,4.265,373,4.265]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":89,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ContactService.html":{}}}],["10",{"_index":242,"title":{},"body":{"injectables/ContactService.html":{}}}],["16.0.0",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["1d",{"_index":301,"title":{},"body":{"modules/UserModule.html":{}}}],["2",{"_index":368,"title":{},"body":{"overview.html":{}}}],["3",{"_index":366,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":367,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":237,"title":{},"body":{"injectables/ContactService.html":{}}}],["addmultiplecontact",{"_index":113,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["addmultiplecontact(data",{"_index":120,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["addsinglecontact",{"_index":114,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["addsinglecontact(@body",{"_index":158,"title":{},"body":{"controllers/ContactController.html":{}}}],["addsinglecontact(data",{"_index":127,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["api/auth",{"_index":265,"title":{},"body":{"controllers/UserController.html":{}}}],["api/contact",{"_index":111,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["app.controller",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":112,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["auth/auth.middleware",{"_index":195,"title":{},"body":{"modules/ContactModule.html":{}}}],["authmiddleware",{"_index":56,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/ContactModule.html":{},"coverage.html":{}}}],["authservice",{"_index":278,"title":{},"body":{"controllers/UserController.html":{}}}],["await",{"_index":159,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["badrequestexception",{"_index":76,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UserService.html":{}}}],["badrequestexception(data",{"_index":307,"title":{},"body":{"injectables/UserService.html":{}}}],["body",{"_index":147,"title":{},"body":{"controllers/ContactController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":332,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":364,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":361,"title":{},"body":{"modules.html":{}}}],["catch",{"_index":316,"title":{},"body":{"injectables/UserService.html":{}}}],["class",{"_index":21,"title":{"classes/ContactDto.html":{},"classes/UserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":173,"title":{},"body":{"classes/ContactDto.html":{},"classes/UserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_contactmodule",{"_index":184,"title":{},"body":{"modules/ContactModule.html":{},"overview.html":{}}}],["cluster_contactmodule_imports",{"_index":185,"title":{},"body":{"modules/ContactModule.html":{}}}],["cluster_contactmodule_providers",{"_index":186,"title":{},"body":{"modules/ContactModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":290,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":291,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["configure",{"_index":188,"title":{},"body":{"modules/ContactModule.html":{}}}],["configure(consumer",{"_index":189,"title":{},"body":{"modules/ContactModule.html":{}}}],["console.log('request",{"_index":82,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["const",{"_index":86,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":59,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["constructor(contactmodel",{"_index":201,"title":{},"body":{"injectables/ContactService.html":{}}}],["constructor(jwtservice",{"_index":60,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"controllers/UserController.html":{}}}],["consumer",{"_index":192,"title":{},"body":{"modules/ContactModule.html":{}}}],["consumer.apply(authmiddleware).forroutes('api",{"_index":199,"title":{},"body":{"modules/ContactModule.html":{}}}],["contact",{"_index":94,"title":{"interfaces/Contact.html":{}},"body":{"interfaces/Contact.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"coverage.html":{},"index.html":{}}}],["contact.controller",{"_index":194,"title":{},"body":{"modules/ContactModule.html":{}}}],["contact.schema",{"_index":156,"title":{},"body":{"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{}}}],["contact.service",{"_index":154,"title":{},"body":{"controllers/ContactController.html":{},"modules/ContactModule.html":{}}}],["contact/contact.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["contactcontroller",{"_index":108,"title":{"controllers/ContactController.html":{}},"body":{"controllers/ContactController.html":{},"modules/ContactModule.html":{},"coverage.html":{},"index.html":{}}}],["contactdto",{"_index":121,"title":{"classes/ContactDto.html":{}},"body":{"controllers/ContactController.html":{},"classes/ContactDto.html":{},"injectables/ContactService.html":{},"coverage.html":{},"index.html":{}}}],["contactmodel",{"_index":204,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["contactmodule",{"_index":35,"title":{"modules/ContactModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules.html":{},"overview.html":{}}}],["contactno",{"_index":100,"title":{},"body":{"interfaces/Contact.html":{},"classes/ContactDto.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["contactobject",{"_index":224,"title":{},"body":{"injectables/ContactService.html":{}}}],["contactobject.id",{"_index":226,"title":{},"body":{"injectables/ContactService.html":{}}}],["contacts",{"_index":249,"title":{},"body":{"injectables/ContactService.html":{}}}],["contacts._id",{"_index":254,"title":{},"body":{"injectables/ContactService.html":{}}}],["contactschema",{"_index":105,"title":{},"body":{"interfaces/Contact.html":{},"modules/ContactModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactservice",{"_index":153,"title":{"injectables/ContactService.html":{}},"body":{"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"coverage.html":{},"overview.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ContactController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ContactController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('api/auth",{"_index":277,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('api/contact",{"_index":157,"title":{},"body":{"controllers/ContactController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["coverage",{"_index":318,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["credentials",{"_index":312,"title":{},"body":{"injectables/UserService.html":{}}}],["data",{"_index":125,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["data.map(async",{"_index":231,"title":{},"body":{"injectables/ContactService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"index.html":{}}}],["default",{"_index":372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"index.html":{}}}],["delete",{"_index":148,"title":{},"body":{"controllers/ContactController.html":{}}}],["delete('delete/:id",{"_index":130,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["deletecontact",{"_index":115,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["deletecontact(id",{"_index":129,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["deleted",{"_index":257,"title":{},"body":{"injectables/ContactService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["document",{"_index":98,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["dotenv/config",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["dto/contact.dto",{"_index":155,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["dto/user.dto",{"_index":276,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":317,"title":{},"body":{"injectables/UserService.html":{}}}],["error",{"_index":239,"title":{},"body":{"injectables/ContactService.html":{}}}],["exec",{"_index":238,"title":{},"body":{"injectables/ContactService.html":{}}}],["exists",{"_index":241,"title":{},"body":{"injectables/ContactService.html":{}}}],["exists(true",{"_index":246,"title":{},"body":{"injectables/ContactService.html":{}}}],["expiresin",{"_index":300,"title":{},"body":{"modules/UserModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["express",{"_index":79,"title":{},"body":{"injectables/AuthMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":97,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["filtercontact",{"_index":116,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["filtercontact(name",{"_index":132,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["find",{"_index":245,"title":{},"body":{"injectables/ContactService.html":{}}}],["found",{"_index":250,"title":{},"body":{"injectables/ContactService.html":{}}}],["function",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":357,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":141,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["get('all",{"_index":137,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["get('filter",{"_index":133,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["getallcontact",{"_index":117,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["getallcontact(limit",{"_index":135,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["getallcontact(page",{"_index":210,"title":{},"body":{"injectables/ContactService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getsinglecontact",{"_index":118,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["getsinglecontact(@param('id",{"_index":162,"title":{},"body":{"controllers/ContactController.html":{}}}],["getsinglecontact(id",{"_index":140,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["getting",{"_index":359,"title":{"index.html":{}},"body":{}}],["hello",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["id",{"_index":101,"title":{},"body":{"interfaces/Contact.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"index.html":{}}}],["identifier",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":81,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/ContactModule.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["injectable",{"_index":50,"title":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/ContactService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/ContactService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/ContactService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":215,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["injectmodel('contact",{"_index":220,"title":{},"body":{"injectables/ContactService.html":{}}}],["injectmodel('user",{"_index":306,"title":{},"body":{"injectables/UserService.html":{}}}],["interface",{"_index":93,"title":{"interfaces/Contact.html":{},"interfaces/User.html":{}},"body":{"interfaces/Contact.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":95,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isphonenumber",{"_index":179,"title":{},"body":{"classes/ContactDto.html":{},"classes/UserDto.html":{}}}],["isphonenumber('in",{"_index":175,"title":{},"body":{"classes/ContactDto.html":{},"classes/UserDto.html":{}}}],["isstring",{"_index":180,"title":{},"body":{"classes/ContactDto.html":{},"classes/UserDto.html":{}}}],["isstring()@minlength(1",{"_index":177,"title":{},"body":{"classes/ContactDto.html":{}}}],["isstring()@minlength(8)@maxlength(20",{"_index":285,"title":{},"body":{"classes/UserDto.html":{}}}],["jwt",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["jwtmodule",{"_index":294,"title":{},"body":{"modules/UserModule.html":{}}}],["jwtmodule.register",{"_index":296,"title":{},"body":{"modules/UserModule.html":{}}}],["jwtservice",{"_index":61,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["limit",{"_index":139,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["limit(limit",{"_index":248,"title":{},"body":{"injectables/ContactService.html":{}}}],["login",{"_index":266,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["login(@body",{"_index":281,"title":{},"body":{"controllers/UserController.html":{}}}],["login(data",{"_index":268,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["matched",{"_index":313,"title":{},"body":{"injectables/UserService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":287,"title":{},"body":{"classes/UserDto.html":{}}}],["maxlength(20",{"_index":289,"title":{},"body":{"classes/UserDto.html":{}}}],["message",{"_index":233,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["metadata",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["middlewareconsumer",{"_index":190,"title":{},"body":{"modules/ContactModule.html":{}}}],["minlength",{"_index":181,"title":{},"body":{"classes/ContactDto.html":{},"classes/UserDto.html":{}}}],["minlength(1",{"_index":183,"title":{},"body":{"classes/ContactDto.html":{}}}],["minlength(8",{"_index":288,"title":{},"body":{"classes/UserDto.html":{}}}],["miscellaneous",{"_index":356,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":202,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":104,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":198,"title":{},"body":{"modules/ContactModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forroot(process.env.mongodb_connection_string",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple",{"_index":123,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["name",{"_index":64,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common/exceptions",{"_index":219,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["nestjs/core",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core/errors/exceptions/runtime.exception",{"_index":217,"title":{},"body":{"injectables/ContactService.html":{}}}],["nestjs/jwt",{"_index":80,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":77,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":193,"title":{},"body":{"modules/ContactModule.html":{}}}],["new",{"_index":85,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcontact",{"_index":222,"title":{},"body":{"injectables/ContactService.html":{}}}],["newcontact.save",{"_index":225,"title":{},"body":{"injectables/ContactService.html":{}}}],["next",{"_index":71,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nextfunction",{"_index":72,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["not_found",{"_index":240,"title":{},"body":{"injectables/ContactService.html":{}}}],["notfoundexception",{"_index":218,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(data",{"_index":311,"title":{},"body":{"injectables/UserService.html":{}}}],["null",{"_index":227,"title":{},"body":{"injectables/ContactService.html":{}}}],["number",{"_index":102,"title":{},"body":{"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":144,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["optional",{"_index":66,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["out",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":365,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":335,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":136,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["param",{"_index":149,"title":{},"body":{"controllers/ContactController.html":{}}}],["param('id",{"_index":170,"title":{},"body":{"controllers/ContactController.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["passport",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":260,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":90,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["payload.contactno",{"_index":92,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["perform",{"_index":230,"title":{},"body":{"injectables/ContactService.html":{}}}],["post",{"_index":150,"title":{},"body":{"controllers/ContactController.html":{},"controllers/UserController.html":{}}}],["post('add",{"_index":122,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["post('login",{"_index":270,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register",{"_index":273,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":110,"title":{},"body":{"controllers/ContactController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["private",{"_index":221,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":298,"title":{},"body":{"modules/UserModule.html":{}}}],["promise",{"_index":126,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["properties",{"_index":99,"title":{},"body":{"interfaces/Contact.html":{},"classes/ContactDto.html":{},"interfaces/User.html":{},"classes/UserDto.html":{}}}],["providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{}}}],["put",{"_index":151,"title":{},"body":{"controllers/ContactController.html":{}}}],["put('update/:id",{"_index":145,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["query",{"_index":152,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["query('contact",{"_index":168,"title":{},"body":{"controllers/ContactController.html":{}}}],["query('limit",{"_index":164,"title":{},"body":{"controllers/ContactController.html":{}}}],["query('name",{"_index":167,"title":{},"body":{"controllers/ContactController.html":{}}}],["query('page",{"_index":165,"title":{},"body":{"controllers/ContactController.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":267,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["register(@body",{"_index":279,"title":{},"body":{"controllers/UserController.html":{}}}],["register(data",{"_index":272,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["registration",{"_index":309,"title":{},"body":{"injectables/UserService.html":{}}}],["req",{"_index":74,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.header('authorization",{"_index":83,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.header('authorization').split",{"_index":88,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["request",{"_index":68,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ContactService.html":{}}}],["required",{"_index":106,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":69,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["reset",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":70,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["rimraf",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["runtimeexception",{"_index":216,"title":{},"body":{"injectables/ContactService.html":{}}}],["runtimeexception('server",{"_index":228,"title":{},"body":{"injectables/ContactService.html":{}}}],["rxjs",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["saved",{"_index":234,"title":{},"body":{"injectables/ContactService.html":{}}}],["schema",{"_index":103,"title":{},"body":{"interfaces/Contact.html":{},"modules/ContactModule.html":{},"interfaces/User.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":297,"title":{},"body":{"modules/UserModule.html":{}}}],["signoptions",{"_index":299,"title":{},"body":{"modules/UserModule.html":{}}}],["skip",{"_index":243,"title":{},"body":{"injectables/ContactService.html":{}}}],["skip(skip",{"_index":247,"title":{},"body":{"injectables/ContactService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["src/.../contact.schema.ts",{"_index":370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.middleware.ts",{"_index":57,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/auth/auth.middleware.ts:12",{"_index":62,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/auth/auth.middleware.ts:14",{"_index":73,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/contact/contact.controller.ts",{"_index":109,"title":{},"body":{"controllers/ContactController.html":{},"coverage.html":{},"index.html":{}}}],["src/contact/contact.controller.ts:20",{"_index":128,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["src/contact/contact.controller.ts:25",{"_index":124,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["src/contact/contact.controller.ts:32",{"_index":142,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["src/contact/contact.controller.ts:37",{"_index":138,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["src/contact/contact.controller.ts:45",{"_index":134,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["src/contact/contact.controller.ts:55",{"_index":146,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["src/contact/contact.controller.ts:65",{"_index":131,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["src/contact/contact.module.ts",{"_index":187,"title":{},"body":{"modules/ContactModule.html":{}}}],["src/contact/contact.module.ts:20",{"_index":191,"title":{},"body":{"modules/ContactModule.html":{}}}],["src/contact/contact.schema.ts",{"_index":96,"title":{},"body":{"interfaces/Contact.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/contact/contact.service.ts",{"_index":200,"title":{},"body":{"injectables/ContactService.html":{},"coverage.html":{}}}],["src/contact/contact.service.ts:10",{"_index":203,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/contact.service.ts:16",{"_index":207,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/contact.service.ts:24",{"_index":205,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/contact.service.ts:35",{"_index":212,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/contact.service.ts:45",{"_index":211,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/contact.service.ts:65",{"_index":209,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/contact.service.ts:77",{"_index":214,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/contact.service.ts:87",{"_index":208,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/dto/contact.dto.ts",{"_index":174,"title":{},"body":{"classes/ContactDto.html":{},"coverage.html":{}}}],["src/contact/dto/contact.dto.ts:6",{"_index":178,"title":{},"body":{"classes/ContactDto.html":{}}}],["src/contact/dto/contact.dto.ts:9",{"_index":176,"title":{},"body":{"classes/ContactDto.html":{}}}],["src/main.ts",{"_index":330,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/dto/user.dto.ts",{"_index":283,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/user/dto/user.dto.ts:10",{"_index":284,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/user.dto.ts:7",{"_index":286,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/user.controller.ts",{"_index":264,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:14",{"_index":271,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:9",{"_index":274,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":292,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.schema.ts",{"_index":259,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.service.ts",{"_index":302,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:10",{"_index":303,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":305,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:25",{"_index":304,"title":{},"body":{"injectables/UserService.html":{}}}],["started",{"_index":360,"title":{"index.html":{}},"body":{}}],["statements",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["successful",{"_index":315,"title":{},"body":{"injectables/UserService.html":{}}}],["successfully",{"_index":235,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["support",{"_index":362,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":363,"title":{},"body":{"modules.html":{}}}],["table",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":282,"title":{},"body":{"controllers/UserController.html":{}}}],["this.authservice.register(data",{"_index":280,"title":{},"body":{"controllers/UserController.html":{}}}],["this.contactmodel",{"_index":244,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactmodel.create(contact",{"_index":232,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactmodel.create(data",{"_index":223,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["this.contactmodel.deleteone",{"_index":256,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactmodel.findone",{"_index":236,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["this.contactmodel.findone(id",{"_index":252,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactmodel.findoneandupdate",{"_index":251,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactmodel.updateone(data",{"_index":253,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactservice.addmultiplecontact(data",{"_index":161,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.addsinglecontact(data",{"_index":160,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.deletecontact",{"_index":172,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.filtercontact(name",{"_index":169,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.getallcontact(page",{"_index":166,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.getsinglecontact(id",{"_index":163,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.updatecontact(id",{"_index":171,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.jwtservice.sign",{"_index":314,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.verify(token",{"_index":91,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["throw",{"_index":84,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["token",{"_index":87,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UserService.html":{}}}],["transformer",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":107,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":310,"title":{},"body":{"injectables/UserService.html":{}}}],["type",{"_index":65,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unable",{"_index":229,"title":{},"body":{"injectables/ContactService.html":{}}}],["unauthorizedexception",{"_index":78,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["unique",{"_index":262,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":206,"title":{},"body":{"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatecontact",{"_index":119,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["updatecontact(data",{"_index":143,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["updatecontact(id",{"_index":213,"title":{},"body":{"injectables/ContactService.html":{}}}],["updated",{"_index":255,"title":{},"body":{"injectables/ContactService.html":{}}}],["use",{"_index":58,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["use(req",{"_index":67,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["user",{"_index":258,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":293,"title":{},"body":{"modules/UserModule.html":{}}}],["user.save",{"_index":308,"title":{},"body":{"injectables/UserService.html":{}}}],["user.schema",{"_index":295,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.service",{"_index":275,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/ContactModule.html":{}}}],["user/user.service",{"_index":197,"title":{},"body":{"modules/ContactModule.html":{}}}],["usercontroller",{"_index":263,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":269,"title":{"classes/UserDto.html":{}},"body":{"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usermodule",{"_index":36,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userschema",{"_index":261,"title":{},"body":{"interfaces/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":196,"title":{"injectables/UserService.html":{}},"body":{"modules/ContactModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":182,"title":{},"body":{"classes/ContactDto.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["value",{"_index":373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":369,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":75,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["world",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nContactModule\n\nContactModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nContactModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContactModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ContactModule } from './contact/contact.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserModule } from './user/user.module';\nimport 'dotenv/config';\n\n@Module({\n  imports: [\n    ContactModule,\n    MongooseModule.forRoot(process.env.MONGODB_CONNECTION_STRING),\n    UserModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.middleware.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.middleware.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NestMiddleware,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserModule } from './../user/user.module';\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly jwtService: JwtService) {}\n  use(req: Request, res: Response, next: NextFunction) {\n    console.log('Request...');\n    if (!req.header('authorization')) throw new UnauthorizedException();\n    const token = req.header('authorization').split(' ')[1];\n    const payload = this.jwtService.verify(token);\n    if (!payload.contactNo) throw new BadRequestException();\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contact.html":{"url":"interfaces/Contact.html","title":"interface - Contact","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/contact.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contactNo\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contactNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactNo:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Schema, Document } from 'mongoose';\n\nexport const ContactSchema = new Schema({\n  name: { type: String, required: true },\n  contactNo: { type: Number, required: true },\n});\n\nexport interface Contact extends Document {\n  id: string;\n  name: string;\n  contactNo: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContactController.html":{"url":"controllers/ContactController.html","title":"controller - ContactController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContactController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/contact.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/contact\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMultipleContact\n                            \n                            \n                                    Async\n                                addSingleContact\n                            \n                            \n                                    Async\n                                deleteContact\n                            \n                            \n                                    Async\n                                filterContact\n                            \n                            \n                                    Async\n                                getAllContact\n                            \n                            \n                                    Async\n                                getSingleContact\n                            \n                            \n                                    Async\n                                updateContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addMultipleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMultipleContact(data: ContactDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add-multiple')\n                \n            \n\n            \n                \n                    Defined in src/contact/contact.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ContactDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addSingleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSingleContact(data: ContactDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add')\n                \n            \n\n            \n                \n                    Defined in src/contact/contact.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteContact(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete/:id')\n                \n            \n\n            \n                \n                    Defined in src/contact/contact.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        filterContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterContact(name: string, contact: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('filter')\n                \n            \n\n            \n                \n                    Defined in src/contact/contact.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contact\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllContact(limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all')\n                \n            \n\n            \n                \n                    Defined in src/contact/contact.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSingleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSingleContact(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/contact/contact.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateContact(data: object, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('update/:id')\n                \n            \n\n            \n                \n                    Defined in src/contact/contact.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  Query,\n} from '@nestjs/common';\nimport { ContactService } from './contact.service';\nimport { ContactDto } from './dto/contact.dto';\nimport { Contact } from './contact.schema';\n\n@Controller('api/contact')\nexport class ContactController {\n  constructor(private readonly contactService: ContactService) {}\n\n  @Post('add')\n  async addSingleContact(@Body() data: ContactDto): Promise {\n    return await this.contactService.addSingleContact(data);\n  }\n\n  @Post('add-multiple')\n  async addMultipleContact(\n    @Body() data: ContactDto[],\n  ): Promise {\n    return await this.contactService.addMultipleContact(data);\n  }\n\n  @Get(':id')\n  async getSingleContact(@Param('id') id: string): Promise {\n    return await this.contactService.getSingleContact(id);\n  }\n\n  @Get('all')\n  async getAllContact(\n    @Query('limit') limit: number,\n    @Query('page') page: number,\n  ): Promise {\n    return await this.contactService.getAllContact(page, limit);\n  }\n\n  @Get('filter')\n  async filterContact(\n    @Query('name')\n    name: string,\n    @Query('contact')\n    contact: number,\n  ): Promise {\n    return await this.contactService.filterContact(name, contact);\n  }\n\n  @Put('update/:id')\n  async updateContact(\n    @Body()\n    data: object,\n    @Param('id')\n    id: string,\n  ): Promise {\n    return await this.contactService.updateContact(id, data);\n  }\n\n  @Delete('delete/:id')\n  async deleteContact(\n    @Param('id')\n    id: string,\n  ): Promise {\n    return await this.contactService.deleteContact({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContactDto.html":{"url":"classes/ContactDto.html","title":"class - ContactDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContactDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/dto/contact.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contactNo\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contactNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('IN')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/dto/contact.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/dto/contact.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsPhoneNumber, IsString, MinLength } from 'class-validator';\n\nexport class ContactDto {\n  @IsString()\n  @MinLength(1)\n  name: string;\n\n  @IsPhoneNumber('IN')\n  contactNo: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactModule.html":{"url":"modules/ContactModule.html","title":"module - ContactModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ContactModule\n\n\n\ncluster_ContactModule_imports\n\n\n\ncluster_ContactModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nContactModule\n\nContactModule\n\nContactModule -->\n\nUserModule->ContactModule\n\n\n\n\n\nContactService\n\nContactService\n\nContactModule -->\n\nContactService->ContactModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/contact/contact.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ContactService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ContactController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.module.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { ContactService } from './contact.service';\nimport { ContactController } from './contact.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ContactSchema } from './contact.schema';\nimport { AuthMiddleware } from '../auth/auth.middleware';\nimport { UserService } from '../user/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserModule } from '../user/user.module';\n\n@Module({\n  imports: [\n    UserModule,\n    MongooseModule.forFeature([{ name: 'Contact', schema: ContactSchema }]),\n  ],\n  providers: [ContactService],\n  controllers: [ContactController],\n})\nexport class ContactModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): any {\n    consumer.apply(AuthMiddleware).forRoutes('api');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/contact.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMultipleContact\n                            \n                            \n                                    Async\n                                addSingleContact\n                            \n                            \n                                    Async\n                                deleteContact\n                            \n                            \n                                    Async\n                                filterContact\n                            \n                            \n                                    Async\n                                getAllContact\n                            \n                            \n                                    Async\n                                getSingleContact\n                            \n                            \n                                    Async\n                                updateContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contactModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/contact/contact.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contactModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addMultipleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMultipleContact(data: ContactDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ContactDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addSingleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSingleContact(data: ContactDto)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteContact(id)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        filterContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterContact(name: string, contact: number)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contact\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllContact(page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSingleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSingleContact(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateContact(id, data)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Contact } from './contact.schema';\nimport { RuntimeException } from '@nestjs/core/errors/exceptions/runtime.exception';\nimport { NotFoundException } from '@nestjs/common/exceptions';\nimport { ContactDto } from './dto/contact.dto';\n\n@Injectable()\nexport class ContactService {\n  constructor(\n    @InjectModel('Contact')\n    private readonly contactModel: Model,\n  ) {}\n\n  async addSingleContact(data: ContactDto) {\n    const newContact = await this.contactModel.create(data);\n    const contactObject = await newContact.save();\n    if (contactObject.id === null)\n      throw new RuntimeException('Server unable to perform request');\n    return contactObject.id as string;\n  }\n\n  async addMultipleContact(data: ContactDto[]) {\n    let newContact, contactObject;\n    data.map(async (contact) => {\n      newContact = await this.contactModel.create(contact);\n      contactObject = await newContact.save();\n      if (contactObject.id === null)\n        throw new RuntimeException('Server unable to perform request');\n    });\n    return { message: 'data saved successfully' };\n  }\n\n  async getSingleContact(id: string): Promise {\n    const contact = await this.contactModel.findOne({ _id: id }).exec();\n    if (contact === null)\n      throw new NotFoundException(\n        { Error: 'NOT_FOUND', id },\n        'no data exists with id',\n      );\n    return contact;\n  }\n\n  async getAllContact(page: number, limit: number): Promise {\n    if (page === null) page = 1;\n    if (limit === null) limit = 10;\n    const skip = (page - 1) * limit;\n\n    const contact = await this.contactModel\n      .find({})\n      .exists(true)\n      .skip(skip)\n      .limit(limit)\n      .exec();\n    if (contact === null)\n      throw new NotFoundException(\n        { Error: 'NOT_FOUND', page, limit },\n        'Data does not exists',\n      );\n\n    return contact;\n  }\n\n  async filterContact(name: string, contact: number): Promise {\n    const contacts = await this.contactModel\n      .find({ $or: [{ name }, { contact }] }) // { $or: name | contact }\n      .exec();\n    if (contact === null)\n      throw new NotFoundException(\n        { Error: 'NOT_FOUND', name, contact },\n        'no data found for the query',\n      );\n    return contacts;\n  }\n\n  async updateContact(id, data) {\n    const contacts = await this.contactModel.findOneAndUpdate(\n      this.contactModel.findOne(id),\n      this.contactModel.updateOne(data),\n    );\n    if (contacts === null)\n      throw new RuntimeException('Server unable to perform request');\n    return { id: contacts._id, message: 'data have been updated' };\n  }\n\n  async deleteContact(id) {\n    const contact = await this.contactModel.deleteOne({ id });\n    if (contact === null)\n      throw new RuntimeException('Server unable to perform request');\n    return { message: 'data deleted successfully' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contactNo\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contactNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactNo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Schema, Document } from 'mongoose';\n\nexport const UserSchema = new Schema({\n  contactNo: { type: Number, required: true, unique: true },\n  password: { type: String, required: true },\n});\n\nexport interface User extends Document {\n  id: string;\n  contactNo: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserDto } from './dto/user.dto';\n\n@Controller('api/auth')\nexport class UserController {\n  constructor(private readonly authService: UserService) {}\n  @Post('register')\n  async register(@Body() data: UserDto) {\n    return await this.authService.register(data);\n  }\n\n  @Post('login')\n  async login(@Body() data: UserDto) {\n    return await this.authService.login(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contactNo\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contactNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('IN')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(8)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsPhoneNumber, IsString, MaxLength, MinLength } from 'class-validator';\n\nexport class UserDto {\n  @IsString()\n  @MinLength(8)\n  @MaxLength(20)\n  password: string;\n\n  @IsPhoneNumber('IN')\n  contactNo: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { JwtModule, JwtService } from '@nestjs/jwt';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema } from './user.schema';\nimport 'dotenv/config';\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: '1d',\n      },\n    }),\n    MongooseModule.forFeature([{ name: 'user', schema: UserSchema }]),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, contactModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contactModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User } from './user.schema';\nimport { NotFoundException } from '@nestjs/common/exceptions';\nimport { UserDto } from './dto/user.dto';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly jwtService: JwtService,\n    @InjectModel('user')\n    private readonly contactModel: Model,\n  ) {}\n\n  async register(data: UserDto) {\n    const user = await this.contactModel.create(data);\n    if (!user)\n      throw new BadRequestException(data, 'could not register new user');\n    await user.save();\n    return { message: 'registration Successfully' };\n  }\n\n  async login(data: UserDto) {\n    const { contactNo, password } = data;\n    try {\n      const user = await this.contactModel.findOne({\n        $and: [{ contactNo }, { password }],\n      });\n      if (!user)\n        throw new NotFoundException(data, 'Credentials does not matched');\n      const token = this.jwtService.sign({ contactNo });\n      return { message: 'login successful', token };\n    } catch (e) {\n      throw new BadRequestException(data, 'Credentials does not matched');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/contact/contact.controller.ts\n            \n            controller\n            ContactController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/contact/contact.schema.ts\n            \n            interface\n            Contact\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/contact/contact.schema.ts\n            \n            variable\n            ContactSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contact/contact.service.ts\n            \n            injectable\n            ContactService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/contact/dto/contact.dto.ts\n            \n            class\n            ContactDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.schema.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.2\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            dotenv : ^16.0.0\n        \n            mongoose : ^6.2.2\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  Controllers\n  ContactController\n\n        \n            Info\n        \n        \n            Source\n        \n\n    \n        \n            File\n        \n        \n            src/contact/contact.controller.ts\n        \n            \n                Prefix\n            \n            \n                api/contact\n            \n            \n    Index\n    \n        \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMultipleContact\n                            \n                            \n                                    Async\n                                addSingleContact\n                            \n                            \n                                    Async\n                                deleteContact\n                            \n                            \n                                    Async\n                                filterContact\n                            \n                            \n                                    Async\n                                getAllContact\n                            \n                            \n                                    Async\n                                getSingleContact\n                            \n                            \n                                    Async\n                                updateContact\n                            \n                        \n                    \n                \n        \n    \n\n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addMultipleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMultipleContact(data: ContactDto[])\n                \n            \n            \n                \n                    Decorators : \n                    \n                    @Post('add-multiple')\n                \n            \n            \n                \n                    Defined in src/contact/contact.controller.ts:25\n                \n            \n            \n                \n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ContactDto[]\n                                    \n                                    \n                                        No\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addSingleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSingleContact(data: ContactDto)\n                \n            \n            \n                \n                    Decorators : \n                    \n                    @Post('add')\n                \n            \n            \n                \n                    Defined in src/contact/contact.controller.ts:20\n                \n            \n   \n                \n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ContactDto\n                                    \n                                    \n                                        No\n                                    \n\n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteContact(id: string)\n                \n            \n            \n                \n                    Decorators : \n                    \n                    @Delete('delete/:id')\n                \n            \n            \n                \n                    Defined in src/contact/contact.controller.ts:65\n                \n            \n    \n                \n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n                                    \n                                        No\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        filterContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterContact(name: string, contact: number)\n                \n            \n            \n                \n                    Decorators : \n                    \n                    @Get('filter')\n                \n            \n            \n                \n                    Defined in src/contact/contact.controller.ts:45\n                \n            \n            \n                \n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n                                    \n                                        No\n                                    \n                                \n                                \n                                    contact\n                                    \n                                                number\n                                                                        \n                                        No\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise                    \n                                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllContact(limit: number, page: number)\n                \n                        \n                \n                    Decorators : \n                    \n                    @Get('all')\n                \n                        \n                \n                    Defined in src/contact/contact.controller.ts:37\n                \n            \n            \n                                    \n                        Parameters :                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                                                        \n                                        No\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                                                        \n                                        No\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise                    \n                                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSingleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSingleContact(id: string)\n                \n                        \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n                        \n                \n                    Defined in src/contact/contact.controller.ts:32\n                \n            \n            \n                                    \n                        Parameters :                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                                                        \n                                        No\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise                    \n                                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateContact(data: object, id: string)\n                \n                        \n                \n                    Decorators : \n                    \n                    @Put('update/:id')\n                \n                        \n                \n                    Defined in src/contact/contact.controller.ts:55\n                \n            \n            \n                                    \n                        Parameters :                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                object\n                                                                        \n                                        No\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                                                        \n                                        No\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise                    \n                                        \n                \n            \n        \n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ContactModule\n\n\n\ncluster_ContactModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nContactModule\n\nContactModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nContactModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nContactModule -->\n\nUserModule->ContactModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nContactService\n\nContactService\n\nContactModule -->\n\nContactService->ContactModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContactSchema   (src/.../contact.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/contact/contact.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ContactSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema({\n  name: { type: String, required: true },\n  contactNo: { type: Number, required: true },\n})\n                    \n                \n\n\n        \n    \n\n    src/user/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema({\n  contactNo: { type: Number, required: true, unique: true },\n  password: { type: String, required: true },\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
