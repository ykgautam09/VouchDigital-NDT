var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.116,1,1.646]],["body/controllers/AppController.html",[0,1.746,1,2.575,2,1.383,3,0.536,4,0.536,5,0.45,6,2.795,7,0.45,8,1.362,9,4.062,10,1.567,11,0.048,12,0.834,13,3.451,14,1.079,15,1.2,16,0.676,17,0.834,18,2.168,19,2.795,20,0.536,21,0.37,22,2.039,23,1.567,24,1.567,25,3.451,26,0.115,27,0.115]],["title/modules/AppModule.html",[28,1.264,29,1.646]],["body/modules/AppModule.html",[1,2.58,2,1.547,3,0.445,4,0.445,5,0.374,11,0.048,16,0.797,17,0.693,18,2.279,19,2.322,20,0.445,21,0.307,26,0.102,27,0.102,28,1.753,29,3.157,30,1.302,31,1.753,32,2.322,33,2.322,34,2.322,35,2.592,36,2.012,37,2.282,38,1.694,39,1.694,40,2.867,41,2.643,42,2.643,43,2.867,44,2.867,45,1.963,46,1.302,47,1.963,48,2.322,49,2.867]],["title/injectables/AppService.html",[18,1.264,50,0.871]],["body/injectables/AppService.html",[3,0.564,4,0.564,5,0.474,7,0.474,8,1.408,9,4.138,11,0.047,12,0.878,14,1.137,15,1.24,16,0.564,17,0.878,18,2.044,20,0.564,21,0.39,24,1.651,26,0.118,27,0.118,50,1.408,51,1.877,52,2.945,53,3.636,54,3.636,55,3.636]],["title/injectables/AuthMiddleware.html",[50,0.871,56,1.646]],["body/injectables/AuthMiddleware.html",[3,0.413,4,0.413,5,0.347,7,0.347,8,1.148,11,0.048,12,0.887,14,0.833,16,0.703,17,0.643,20,0.413,21,0.285,22,1.573,23,1.209,26,0.097,27,0.097,36,1.067,47,1.823,50,1.148,51,1.375,56,2.169,57,2.156,58,3.671,59,1.823,60,2.156,61,2.902,62,2.663,63,1.471,64,0.887,65,0.668,66,1.471,67,3.671,68,3.667,69,4.201,70,4.528,71,4.528,72,4.528,73,2.663,74,2.663,75,2.663,76,2.973,77,3.671,78,3.671,79,2.156,80,1.375,81,2.156,82,2.663,83,2.663,84,2.513,85,1.471,86,1.895,87,2.156,88,2.663,89,2.156,90,2.663,91,2.663,92,2.663]],["title/interfaces/Contact.html",[93,1.437,94,1.116]],["body/interfaces/Contact.html",[3,0.478,4,0.478,5,0.402,7,0.402,11,0.048,15,1.439,16,0.478,20,0.629,26,0.106,27,0.106,64,1.206,65,0.908,85,1.234,86,1.59,93,1.59,94,1.623,95,2.109,96,2.109,97,3.279,98,3.664,99,2.393,100,2.266,101,2.481,102,1.702,103,2.09,104,1.59,105,1.82,106,2.772,107,2.772]],["title/controllers/ContactController.html",[0,1.116,108,1.646]],["body/controllers/ContactController.html",[0,0.623,2,0.623,3,0.241,4,0.241,5,0.203,7,0.203,8,0.769,10,1.915,11,0.048,12,1.019,14,1.319,15,1.319,16,0.539,17,0.375,20,0.241,21,0.166,22,0.918,23,0.705,24,1.915,26,0.065,27,0.065,63,1.691,64,1.088,65,0.767,66,1.691,94,1.517,101,2.258,102,1.595,108,1.454,109,1.258,110,1.063,111,1.258,112,2.691,113,2.091,114,1.684,115,2.091,116,2.091,117,2.091,118,1.684,119,2.091,120,1.063,121,1.915,122,2.813,123,1.992,124,1.258,125,2.178,126,2.541,127,1.063,128,1.258,129,1.063,130,1.992,131,1.258,132,1.063,133,1.992,134,1.258,135,1.258,136,2.091,137,1.992,138,1.258,139,2.091,140,1.063,141,1.992,142,1.258,143,1.258,144,2.473,145,1.992,146,1.258,147,2.473,148,1.554,149,1.554,150,1.258,151,1.554,152,1.258,153,1.387,154,1.258,155,1.258,156,1.063,157,1.554,158,1.554,159,2.493,160,1.554,161,1.554,162,1.554,163,1.554,164,1.554,165,1.554,166,1.554,167,1.554,168,1.554,169,1.554,170,2.46,171,1.554,172,1.554]],["title/classes/ContactDto.html",[21,0.298,121,1.264]],["body/classes/ContactDto.html",[3,0.528,4,0.528,5,0.444,7,0.444,10,1.961,11,0.047,12,1.043,15,1.19,16,0.528,20,0.528,21,0.463,26,0.114,27,0.114,64,1.146,65,0.785,99,2.552,100,2.154,102,1.53,121,1.961,173,2.33,174,2.757,175,3.498,176,3.404,177,3.404,178,3.404,179,2.757,180,3.498,181,2.757,182,2.33,183,3.404]],["title/modules/ContactModule.html",[28,1.264,35,1.437]],["body/modules/ContactModule.html",[2,1.419,3,0.392,4,0.392,5,0.33,8,0.79,11,0.049,12,0.61,14,0.79,16,0.798,17,0.61,20,0.392,21,0.271,26,0.093,27,0.093,28,1.607,30,1.147,31,1.607,35,2.613,36,1.936,37,2.092,38,1.494,39,1.494,41,2.423,42,2.423,45,1.73,46,1.147,47,1.73,56,1.494,61,1.494,63,1.013,64,0.855,65,0.46,66,1.013,80,1.305,81,2.047,94,1.013,103,1.305,105,2.092,108,2.415,153,2.193,154,2.047,156,1.73,184,2.047,185,2.527,186,2.047,187,2.527,188,2.527,189,3.54,190,4.428,191,2.527,192,2.527,193,3.54,194,2.527,195,2.527,196,1.013,197,2.527,198,2.047,199,2.527]],["title/injectables/ContactService.html",[50,0.871,153,1.264]],["body/injectables/ContactService.html",[3,0.186,4,0.186,5,0.157,7,0.157,8,0.624,11,0.049,12,0.958,14,1.184,15,1.043,16,0.588,17,0.29,20,0.186,21,0.129,23,0.545,24,1.719,26,0.052,27,0.052,46,0.545,50,0.624,51,0.62,59,1.366,63,1.589,64,1.076,65,0.65,66,1.589,68,2.416,84,2.592,85,1.518,86,2.047,89,1.616,94,1.924,101,2.047,102,1.457,104,0.62,112,2.57,113,1.366,114,1.366,115,1.366,116,1.366,117,1.366,118,1.366,119,1.366,120,1.366,121,1.719,125,2.249,126,1.845,127,1.366,129,1.366,132,1.366,136,2.267,139,2.592,140,1.366,152,0.972,153,0.906,155,0.972,156,0.822,159,2.432,200,0.972,201,1.201,202,2.416,203,1.201,204,1.616,205,1.201,206,2.416,207,1.201,208,1.201,209,1.201,210,1.996,211,1.201,212,1.201,213,1.996,214,1.201,215,0.972,216,1.201,217,1.201,218,2.416,219,0.972,220,1.201,221,0.972,222,2.561,223,0.972,224,2.561,225,1.996,226,2.561,227,4.116,228,2.984,229,2.984,230,2.984,231,1.201,232,1.201,233,2.074,234,1.201,235,1.616,236,0.972,237,1.201,238,2.561,239,2.561,240,2.561,241,1.996,242,1.201,243,1.201,244,1.996,245,1.996,246,1.201,247,1.201,248,1.201,249,2.984,250,1.201,251,1.201,252,1.201,253,1.201,254,1.201,255,1.201,256,1.201,257,1.201]],["title/interfaces/User.html",[93,1.437,258,1.437]],["body/interfaces/User.html",[3,0.474,4,0.474,5,0.398,7,0.398,11,0.048,15,1.488,16,0.474,20,0.625,26,0.106,27,0.106,65,0.905,85,1.224,86,1.577,93,1.577,95,2.091,97,3.262,98,3.649,99,2.38,100,2.26,101,2.473,102,1.082,103,2.079,104,1.577,106,2.757,107,3.084,258,2.079,259,2.091,260,2.942,261,1.806,262,2.474]],["title/controllers/UserController.html",[0,1.116,263,1.646]],["body/controllers/UserController.html",[0,1.09,2,1.09,3,0.422,4,0.422,5,0.355,7,0.355,8,1.165,10,1.692,11,0.048,12,0.9,14,1.165,16,0.66,17,0.657,20,0.422,21,0.291,22,1.608,23,1.235,24,1.692,26,0.098,27,0.098,63,1.493,64,0.9,65,0.678,66,1.493,110,1.863,112,2.552,125,2.359,126,1.923,147,3.017,150,2.203,159,2.202,196,1.493,206,2.203,263,2.202,264,2.203,265,2.721,266,3.441,267,3.017,268,2.203,269,2.613,270,3.726,271,2.721,272,2.203,273,3.726,274,2.721,275,2.203,276,2.203,277,2.721,278,2.721,279,2.721,280,2.721,281,2.721]],["title/classes/UserDto.html",[21,0.298,269,1.437]],["body/classes/UserDto.html",[3,0.524,4,0.524,5,0.44,7,0.44,10,1.95,11,0.047,12,1.037,15,1.183,16,0.524,20,0.524,21,0.46,26,0.113,27,0.113,65,0.781,99,2.538,100,2.145,102,1.521,173,2.309,175,3.478,179,2.732,180,3.478,181,2.732,182,2.309,260,2.792,269,2.217,282,2.732,283,3.373,284,3.373,285,3.373,286,3.373,287,3.373,288,3.373]],["title/modules/UserModule.html",[28,1.264,36,1.116]],["body/modules/UserModule.html",[2,1.559,3,0.45,4,0.45,5,0.378,11,0.048,16,0.799,17,0.701,20,0.45,21,0.311,26,0.102,27,0.102,28,1.767,30,1.317,31,1.767,36,2.019,37,2.299,38,1.714,39,1.714,41,2.664,42,1.986,45,1.986,46,1.317,48,2.349,61,1.714,64,0.701,80,1.497,103,1.497,196,2.019,198,2.349,258,1.497,261,2.299,263,2.595,275,2.349,289,2.349,290,2.349,291,2.901,292,2.901,293,2.901,294,2.349,295,2.901,296,2.901,297,2.901,298,2.901,299,2.901,300,2.901]],["title/injectables/UserService.html",[50,0.871,196,1.116]],["body/injectables/UserService.html",[3,0.315,4,0.315,5,0.265,7,0.265,8,0.945,11,0.049,12,0.872,14,0.945,16,0.721,17,0.491,20,0.315,21,0.218,23,1.373,24,1.373,26,0.08,27,0.08,46,0.922,50,0.945,51,1.049,59,2.07,60,1.645,61,2.649,63,1.447,64,0.872,65,0.657,66,1.447,76,1.645,80,1.049,84,2.472,85,1.603,86,2.065,87,2.449,100,1.64,104,1.049,112,2.314,125,1.864,126,2.065,159,2.134,196,1.212,202,3.239,204,2.924,215,1.645,218,1.645,219,1.645,221,2.449,223,1.645,233,2.449,235,1.645,236,1.645,258,2.314,260,1.787,266,2.924,267,2.924,268,2.449,269,2.397,272,2.449,276,1.645,294,1.645,301,1.645,302,2.032,303,2.032,304,2.032,305,2.032,306,3.024,307,2.032,308,2.032,309,2.032,310,2.032,311,3.024,312,3.024,313,2.032,314,2.032,315,2.032,316,2.032]],["title/coverage.html",[317,3.065]],["body/coverage.html",[0,1.739,1,1.675,5,0.37,6,2.296,11,0.047,18,1.287,21,0.41,26,0.101,27,0.101,50,1.453,52,2.296,56,1.675,57,2.296,65,0.515,85,1.136,93,1.978,94,1.136,96,2.623,105,1.675,108,1.675,109,2.296,121,1.287,153,1.287,174,2.296,196,1.136,200,2.296,258,1.463,259,2.623,261,1.675,263,1.675,264,2.296,269,1.463,282,2.296,301,2.296,317,2.296,318,2.296,319,2.835,320,2.835,321,5.484,322,3.831,323,4.648,324,2.835,325,4.34,326,3.831,327,4.34,328,2.835,329,2.296,330,2.835,331,2.296,332,2.835,333,2.835]],["title/dependencies.html",[31,1.519,334,2.333]],["body/dependencies.html",[11,0.048,17,0.838,21,0.468,26,0.115,27,0.115,31,1.574,46,1.574,79,2.808,80,1.79,104,1.79,182,2.373,335,5.024,336,3.467,337,3.467,338,3.467,339,3.467,340,3.467,341,3.467,342,3.467,343,3.467,344,3.467,345,3.467,346,3.467,347,3.467,348,3.467,349,3.467,350,3.467,351,3.467,352,3.467,353,3.467,354,3.467]],["title/miscellaneous/functions.html",[355,1.379,356,2.709]],["body/miscellaneous/functions.html",[7,0.546,11,0.042,26,0.129,27,0.129,329,3.391,331,4.208,355,2.475,356,3.391,357,4.188]],["title/index.html",[7,0.304,358,2.333,359,2.333]],["body/index.html",[7,0.275,8,0.971,10,2.132,11,0.047,12,1.135,14,1.469,15,1.328,63,1.882,64,1.164,65,0.854,66,1.882,94,1.244,101,2.102,102,1.608,110,1.442,111,1.706,112,2.702,113,2.126,114,2.126,115,2.126,116,2.126,117,2.126,118,2.126,119,2.126,120,1.442,121,1.848,122,2.515,123,1.706,124,1.706,125,1.904,126,2.425,127,1.442,128,1.706,129,1.442,130,1.706,131,1.706,132,1.442,133,1.706,134,1.706,135,1.706,136,2.126,137,1.706,138,1.706,139,1.442,140,1.442,141,1.706,142,1.706,143,1.706,144,2.515,145,1.706,146,1.706,318,1.706,360,2.106,361,2.106,362,3.106,363,2.106,364,2.106,365,3.106,366,3.689,367,2.106,368,2.106,369,2.106,370,2.106,371,2.106,372,2.106,373,2.106,374,3.106,375,3.106,376,2.106,377,2.106]],["title/modules.html",[30,1.718]],["body/modules.html",[11,0.041,26,0.126,27,0.126,29,2.368,30,1.819,35,2.069,36,1.606,378,5.102,379,5.102,380,5.102,381,5.102]],["title/overview.html",[382,3.065]],["body/overview.html",[2,1.299,11,0.046,18,2.105,26,0.11,27,0.11,29,3.166,30,1.472,31,1.9,32,2.625,33,2.625,34,2.625,35,2.729,36,2.082,37,2.474,38,1.915,39,1.915,51,1.673,95,2.219,153,2.105,173,2.219,184,2.625,186,2.625,196,1.858,289,2.625,290,2.625,382,2.625,383,4.186,384,3.241,385,4.186]],["title/miscellaneous/variables.html",[355,1.379,386,2.709]],["body/miscellaneous/variables.html",[7,0.436,11,0.048,15,1.176,26,0.112,27,0.112,64,0.807,65,0.901,85,1.711,96,2.288,100,1.939,102,1.512,103,2.204,105,2.523,106,3.393,107,3.506,259,2.288,260,1.975,261,2.523,262,2.707,355,1.975,386,2.707,387,3.343,388,3.343,389,4.27,390,4.27]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":89,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ContactService.html":{}}}],["10",{"_index":242,"title":{},"body":{"injectables/ContactService.html":{}}}],["16.0.0",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["1d",{"_index":300,"title":{},"body":{"modules/UserModule.html":{}}}],["2",{"_index":385,"title":{},"body":{"overview.html":{}}}],["3",{"_index":383,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":384,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":237,"title":{},"body":{"injectables/ContactService.html":{}}}],["addmultiplecontact",{"_index":113,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["addmultiplecontact(data",{"_index":120,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["address",{"_index":360,"title":{},"body":{"index.html":{}}}],["addsinglecontact",{"_index":114,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["addsinglecontact(@body",{"_index":158,"title":{},"body":{"controllers/ContactController.html":{}}}],["addsinglecontact(data",{"_index":127,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["api",{"_index":377,"title":{},"body":{"index.html":{}}}],["api/auth",{"_index":265,"title":{},"body":{"controllers/UserController.html":{}}}],["api/contact",{"_index":111,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["app.controller",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":112,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["auth/auth.middleware",{"_index":195,"title":{},"body":{"modules/ContactModule.html":{}}}],["authmiddleware",{"_index":56,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/ContactModule.html":{},"coverage.html":{}}}],["authservice",{"_index":278,"title":{},"body":{"controllers/UserController.html":{}}}],["await",{"_index":159,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["badrequestexception",{"_index":76,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UserService.html":{}}}],["badrequestexception(data",{"_index":306,"title":{},"body":{"injectables/UserService.html":{}}}],["body",{"_index":147,"title":{},"body":{"controllers/ContactController.html":{},"controllers/UserController.html":{}}}],["book",{"_index":361,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":331,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":381,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":378,"title":{},"body":{"modules.html":{}}}],["catch",{"_index":315,"title":{},"body":{"injectables/UserService.html":{}}}],["class",{"_index":21,"title":{"classes/ContactDto.html":{},"classes/UserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":173,"title":{},"body":{"classes/ContactDto.html":{},"classes/UserDto.html":{},"overview.html":{}}}],["clone",{"_index":370,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_contactmodule",{"_index":184,"title":{},"body":{"modules/ContactModule.html":{},"overview.html":{}}}],["cluster_contactmodule_imports",{"_index":185,"title":{},"body":{"modules/ContactModule.html":{}}}],["cluster_contactmodule_providers",{"_index":186,"title":{},"body":{"modules/ContactModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":289,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":290,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["configure",{"_index":188,"title":{},"body":{"modules/ContactModule.html":{}}}],["configure(consumer",{"_index":189,"title":{},"body":{"modules/ContactModule.html":{}}}],["console.log('request",{"_index":82,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["const",{"_index":86,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":59,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["constructor(contactmodel",{"_index":201,"title":{},"body":{"injectables/ContactService.html":{}}}],["constructor(jwtservice",{"_index":60,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"controllers/UserController.html":{}}}],["consumer",{"_index":192,"title":{},"body":{"modules/ContactModule.html":{}}}],["consumer.apply(authmiddleware).forroutes('api",{"_index":199,"title":{},"body":{"modules/ContactModule.html":{}}}],["contact",{"_index":94,"title":{"interfaces/Contact.html":{}},"body":{"interfaces/Contact.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"coverage.html":{},"index.html":{}}}],["contact.controller",{"_index":194,"title":{},"body":{"modules/ContactModule.html":{}}}],["contact.schema",{"_index":156,"title":{},"body":{"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{}}}],["contact.service",{"_index":154,"title":{},"body":{"controllers/ContactController.html":{},"modules/ContactModule.html":{}}}],["contact/contact.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["contactcontroller",{"_index":108,"title":{"controllers/ContactController.html":{}},"body":{"controllers/ContactController.html":{},"modules/ContactModule.html":{},"coverage.html":{}}}],["contactdto",{"_index":121,"title":{"classes/ContactDto.html":{}},"body":{"controllers/ContactController.html":{},"classes/ContactDto.html":{},"injectables/ContactService.html":{},"coverage.html":{},"index.html":{}}}],["contactmodel",{"_index":204,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["contactmodule",{"_index":35,"title":{"modules/ContactModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules.html":{},"overview.html":{}}}],["contactno",{"_index":100,"title":{},"body":{"interfaces/Contact.html":{},"classes/ContactDto.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["contactobject",{"_index":224,"title":{},"body":{"injectables/ContactService.html":{}}}],["contactobject.id",{"_index":226,"title":{},"body":{"injectables/ContactService.html":{}}}],["contacts",{"_index":249,"title":{},"body":{"injectables/ContactService.html":{}}}],["contacts._id",{"_index":254,"title":{},"body":{"injectables/ContactService.html":{}}}],["contactschema",{"_index":105,"title":{},"body":{"interfaces/Contact.html":{},"modules/ContactModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactservice",{"_index":153,"title":{"injectables/ContactService.html":{}},"body":{"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"coverage.html":{},"overview.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ContactController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ContactController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('api/auth",{"_index":277,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('api/contact",{"_index":157,"title":{},"body":{"controllers/ContactController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":317,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["credentials",{"_index":311,"title":{},"body":{"injectables/UserService.html":{}}}],["data",{"_index":125,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["data.map(async",{"_index":231,"title":{},"body":{"injectables/ContactService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"index.html":{}}}],["default",{"_index":389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"index.html":{}}}],["delete",{"_index":148,"title":{},"body":{"controllers/ContactController.html":{}}}],["delete('delete/:id",{"_index":130,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["deletecontact",{"_index":115,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["deletecontact(id",{"_index":129,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["deleted",{"_index":257,"title":{},"body":{"injectables/ContactService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":362,"title":{},"body":{"index.html":{}}}],["document",{"_index":98,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":318,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["dotenv/config",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["dto/contact.dto",{"_index":155,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["dto/user.dto",{"_index":276,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":316,"title":{},"body":{"injectables/UserService.html":{}}}],["error",{"_index":239,"title":{},"body":{"injectables/ContactService.html":{}}}],["exec",{"_index":238,"title":{},"body":{"injectables/ContactService.html":{}}}],["exists",{"_index":241,"title":{},"body":{"injectables/ContactService.html":{}}}],["exists(true",{"_index":246,"title":{},"body":{"injectables/ContactService.html":{}}}],["expiresin",{"_index":299,"title":{},"body":{"modules/UserModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["express",{"_index":79,"title":{},"body":{"injectables/AuthMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":97,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filtercontact",{"_index":116,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["filtercontact(name",{"_index":132,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["find",{"_index":245,"title":{},"body":{"injectables/ContactService.html":{}}}],["found",{"_index":250,"title":{},"body":{"injectables/ContactService.html":{}}}],["function",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":356,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":141,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["get('all",{"_index":137,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["get('filter",{"_index":133,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["getallcontact",{"_index":117,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["getallcontact(limit",{"_index":135,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["getallcontact(page",{"_index":210,"title":{},"body":{"injectables/ContactService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getsinglecontact",{"_index":118,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["getsinglecontact(@param('id",{"_index":162,"title":{},"body":{"controllers/ContactController.html":{}}}],["getsinglecontact(id",{"_index":140,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["getting",{"_index":358,"title":{"index.html":{}},"body":{}}],["hello",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["id",{"_index":101,"title":{},"body":{"interfaces/Contact.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"index.html":{}}}],["identifier",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":81,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/ContactModule.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":50,"title":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/ContactService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/ContactService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/ContactService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":215,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["injectmodel('contact",{"_index":220,"title":{},"body":{"injectables/ContactService.html":{}}}],["injectmodel('user",{"_index":305,"title":{},"body":{"injectables/UserService.html":{}}}],["install",{"_index":372,"title":{},"body":{"index.html":{}}}],["installation",{"_index":369,"title":{},"body":{"index.html":{}}}],["interface",{"_index":93,"title":{"interfaces/Contact.html":{},"interfaces/User.html":{}},"body":{"interfaces/Contact.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":95,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isphonenumber",{"_index":179,"title":{},"body":{"classes/ContactDto.html":{},"classes/UserDto.html":{}}}],["isphonenumber('in",{"_index":175,"title":{},"body":{"classes/ContactDto.html":{},"classes/UserDto.html":{}}}],["isstring",{"_index":180,"title":{},"body":{"classes/ContactDto.html":{},"classes/UserDto.html":{}}}],["isstring()@minlength(1",{"_index":177,"title":{},"body":{"classes/ContactDto.html":{}}}],["isstring()@minlength(8)@maxlength(20",{"_index":284,"title":{},"body":{"classes/UserDto.html":{}}}],["jwt",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["jwtmodule",{"_index":293,"title":{},"body":{"modules/UserModule.html":{}}}],["jwtmodule.register",{"_index":295,"title":{},"body":{"modules/UserModule.html":{}}}],["jwtservice",{"_index":61,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["limit",{"_index":139,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["limit(limit",{"_index":248,"title":{},"body":{"injectables/ContactService.html":{}}}],["login",{"_index":266,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["login(data",{"_index":268,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["matched",{"_index":312,"title":{},"body":{"injectables/UserService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":286,"title":{},"body":{"classes/UserDto.html":{}}}],["maxlength(20",{"_index":288,"title":{},"body":{"classes/UserDto.html":{}}}],["message",{"_index":233,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["metadata",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["middlewareconsumer",{"_index":190,"title":{},"body":{"modules/ContactModule.html":{}}}],["minlength",{"_index":181,"title":{},"body":{"classes/ContactDto.html":{},"classes/UserDto.html":{}}}],["minlength(1",{"_index":183,"title":{},"body":{"classes/ContactDto.html":{}}}],["minlength(8",{"_index":287,"title":{},"body":{"classes/UserDto.html":{}}}],["miscellaneous",{"_index":355,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":202,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":368,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":104,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":198,"title":{},"body":{"modules/ContactModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forroot(process.env.mongodb_connection_string",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple",{"_index":123,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["name",{"_index":64,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common/exceptions",{"_index":219,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["nestjs/core",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core/errors/exceptions/runtime.exception",{"_index":217,"title":{},"body":{"injectables/ContactService.html":{}}}],["nestjs/jwt",{"_index":80,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":77,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":193,"title":{},"body":{"modules/ContactModule.html":{}}}],["new",{"_index":85,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcontact",{"_index":222,"title":{},"body":{"injectables/ContactService.html":{}}}],["newcontact.save",{"_index":225,"title":{},"body":{"injectables/ContactService.html":{}}}],["newer",{"_index":365,"title":{},"body":{"index.html":{}}}],["next",{"_index":71,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nextfunction",{"_index":72,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["node",{"_index":373,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":363,"title":{},"body":{"index.html":{}}}],["not_found",{"_index":240,"title":{},"body":{"injectables/ContactService.html":{}}}],["notfoundexception",{"_index":218,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(data",{"_index":310,"title":{},"body":{"injectables/UserService.html":{}}}],["npm",{"_index":366,"title":{},"body":{"index.html":{}}}],["null",{"_index":227,"title":{},"body":{"injectables/ContactService.html":{}}}],["number",{"_index":102,"title":{},"body":{"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":144,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["optional",{"_index":66,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["out",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":382,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":334,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":136,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["param",{"_index":149,"title":{},"body":{"controllers/ContactController.html":{}}}],["param('id",{"_index":170,"title":{},"body":{"controllers/ContactController.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["passport",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":260,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":90,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["payload.contactno",{"_index":92,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["perform",{"_index":230,"title":{},"body":{"injectables/ContactService.html":{}}}],["post",{"_index":150,"title":{},"body":{"controllers/ContactController.html":{},"controllers/UserController.html":{}}}],["post('add",{"_index":122,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["post('login",{"_index":270,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register",{"_index":273,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":110,"title":{},"body":{"controllers/ContactController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["private",{"_index":221,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":297,"title":{},"body":{"modules/UserModule.html":{}}}],["promise",{"_index":126,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["properties",{"_index":99,"title":{},"body":{"interfaces/Contact.html":{},"classes/ContactDto.html":{},"interfaces/User.html":{},"classes/UserDto.html":{}}}],["providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{}}}],["put",{"_index":151,"title":{},"body":{"controllers/ContactController.html":{}}}],["put('update/:id",{"_index":145,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["query",{"_index":152,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["query('contact",{"_index":168,"title":{},"body":{"controllers/ContactController.html":{}}}],["query('limit",{"_index":164,"title":{},"body":{"controllers/ContactController.html":{}}}],["query('name",{"_index":167,"title":{},"body":{"controllers/ContactController.html":{}}}],["query('page",{"_index":165,"title":{},"body":{"controllers/ContactController.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":267,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["register(@body",{"_index":279,"title":{},"body":{"controllers/UserController.html":{}}}],["register(data",{"_index":272,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["registration",{"_index":308,"title":{},"body":{"injectables/UserService.html":{}}}],["repository",{"_index":371,"title":{},"body":{"index.html":{}}}],["req",{"_index":74,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.header('authorization",{"_index":83,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.header('authorization').split",{"_index":88,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["request",{"_index":68,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ContactService.html":{}}}],["required",{"_index":106,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":69,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["reset",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":70,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["rimraf",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":374,"title":{},"body":{"index.html":{}}}],["runtimeexception",{"_index":216,"title":{},"body":{"injectables/ContactService.html":{}}}],["runtimeexception('server",{"_index":228,"title":{},"body":{"injectables/ContactService.html":{}}}],["rxjs",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["saved",{"_index":234,"title":{},"body":{"injectables/ContactService.html":{}}}],["schema",{"_index":103,"title":{},"body":{"interfaces/Contact.html":{},"modules/ContactModule.html":{},"interfaces/User.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["script",{"_index":376,"title":{},"body":{"index.html":{}}}],["secret",{"_index":296,"title":{},"body":{"modules/UserModule.html":{}}}],["signoptions",{"_index":298,"title":{},"body":{"modules/UserModule.html":{}}}],["skip",{"_index":243,"title":{},"body":{"injectables/ContactService.html":{}}}],["skip(skip",{"_index":247,"title":{},"body":{"injectables/ContactService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/.../contact.schema.ts",{"_index":387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.middleware.ts",{"_index":57,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/auth/auth.middleware.ts:12",{"_index":62,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/auth/auth.middleware.ts:14",{"_index":73,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/contact/contact.controller.ts",{"_index":109,"title":{},"body":{"controllers/ContactController.html":{},"coverage.html":{}}}],["src/contact/contact.controller.ts:20",{"_index":128,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["src/contact/contact.controller.ts:25",{"_index":124,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["src/contact/contact.controller.ts:32",{"_index":142,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["src/contact/contact.controller.ts:37",{"_index":138,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["src/contact/contact.controller.ts:45",{"_index":134,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["src/contact/contact.controller.ts:55",{"_index":146,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["src/contact/contact.controller.ts:65",{"_index":131,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["src/contact/contact.module.ts",{"_index":187,"title":{},"body":{"modules/ContactModule.html":{}}}],["src/contact/contact.module.ts:20",{"_index":191,"title":{},"body":{"modules/ContactModule.html":{}}}],["src/contact/contact.schema.ts",{"_index":96,"title":{},"body":{"interfaces/Contact.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/contact/contact.service.ts",{"_index":200,"title":{},"body":{"injectables/ContactService.html":{},"coverage.html":{}}}],["src/contact/contact.service.ts:10",{"_index":203,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/contact.service.ts:16",{"_index":207,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/contact.service.ts:24",{"_index":205,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/contact.service.ts:35",{"_index":212,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/contact.service.ts:45",{"_index":211,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/contact.service.ts:65",{"_index":209,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/contact.service.ts:77",{"_index":214,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/contact.service.ts:87",{"_index":208,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/dto/contact.dto.ts",{"_index":174,"title":{},"body":{"classes/ContactDto.html":{},"coverage.html":{}}}],["src/contact/dto/contact.dto.ts:6",{"_index":178,"title":{},"body":{"classes/ContactDto.html":{}}}],["src/contact/dto/contact.dto.ts:9",{"_index":176,"title":{},"body":{"classes/ContactDto.html":{}}}],["src/main.ts",{"_index":329,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/dto/user.dto.ts",{"_index":282,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/user/dto/user.dto.ts:10",{"_index":283,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/user.dto.ts:7",{"_index":285,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/user.controller.ts",{"_index":264,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:14",{"_index":271,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:9",{"_index":274,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":291,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.schema.ts",{"_index":259,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.service.ts",{"_index":301,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:10",{"_index":302,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":304,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:25",{"_index":303,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":375,"title":{},"body":{"index.html":{}}}],["started",{"_index":359,"title":{"index.html":{}},"body":{}}],["statements",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["successful",{"_index":314,"title":{},"body":{"injectables/UserService.html":{}}}],["successfully",{"_index":235,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["support",{"_index":379,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":380,"title":{},"body":{"modules.html":{}}}],["table",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":281,"title":{},"body":{"controllers/UserController.html":{}}}],["this.authservice.register(data",{"_index":280,"title":{},"body":{"controllers/UserController.html":{}}}],["this.contactmodel",{"_index":244,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactmodel.create(contact",{"_index":232,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactmodel.create(data",{"_index":223,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["this.contactmodel.deleteone",{"_index":256,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactmodel.findone",{"_index":236,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["this.contactmodel.findone(id",{"_index":252,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactmodel.findoneandupdate",{"_index":251,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactmodel.updateone(data",{"_index":253,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactservice.addmultiplecontact(data",{"_index":161,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.addsinglecontact(data",{"_index":160,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.deletecontact",{"_index":172,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.filtercontact(name",{"_index":169,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.getallcontact(page",{"_index":166,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.getsinglecontact(id",{"_index":163,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.updatecontact(id",{"_index":171,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.jwtservice.sign",{"_index":313,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.verify(token",{"_index":91,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["throw",{"_index":84,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["token",{"_index":87,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UserService.html":{}}}],["transformer",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":107,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":309,"title":{},"body":{"injectables/UserService.html":{}}}],["type",{"_index":65,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/Contact.html":{},"controllers/ContactController.html":{},"classes/ContactDto.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unable",{"_index":229,"title":{},"body":{"injectables/ContactService.html":{}}}],["unauthorizedexception",{"_index":78,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["unique",{"_index":262,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":206,"title":{},"body":{"injectables/ContactService.html":{},"controllers/UserController.html":{}}}],["updatecontact",{"_index":119,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"index.html":{}}}],["updatecontact(data",{"_index":143,"title":{},"body":{"controllers/ContactController.html":{},"index.html":{}}}],["updatecontact(id",{"_index":213,"title":{},"body":{"injectables/ContactService.html":{}}}],["updated",{"_index":255,"title":{},"body":{"injectables/ContactService.html":{}}}],["use",{"_index":58,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["use(req",{"_index":67,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["user",{"_index":258,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":292,"title":{},"body":{"modules/UserModule.html":{}}}],["user.save",{"_index":307,"title":{},"body":{"injectables/UserService.html":{}}}],["user.schema",{"_index":294,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.service",{"_index":275,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/ContactModule.html":{}}}],["user/user.service",{"_index":197,"title":{},"body":{"modules/ContactModule.html":{}}}],["usercontroller",{"_index":263,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":269,"title":{"classes/UserDto.html":{}},"body":{"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usermodule",{"_index":36,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userschema",{"_index":261,"title":{},"body":{"interfaces/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":196,"title":{"injectables/UserService.html":{}},"body":{"modules/ContactModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["v16.14.0",{"_index":364,"title":{},"body":{"index.html":{}}}],["v8.3.1",{"_index":367,"title":{},"body":{"index.html":{}}}],["validator",{"_index":182,"title":{},"body":{"classes/ContactDto.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["value",{"_index":390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":386,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":75,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["world",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nContactModule\n\nContactModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nContactModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContactModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ContactModule } from './contact/contact.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserModule } from './user/user.module';\nimport 'dotenv/config';\n\n@Module({\n  imports: [\n    ContactModule,\n    MongooseModule.forRoot(process.env.MONGODB_CONNECTION_STRING),\n    UserModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.middleware.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.middleware.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NestMiddleware,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserModule } from './../user/user.module';\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly jwtService: JwtService) {}\n  use(req: Request, res: Response, next: NextFunction) {\n    console.log('Request...');\n    if (!req.header('authorization')) throw new UnauthorizedException();\n    const token = req.header('authorization').split(' ')[1];\n    const payload = this.jwtService.verify(token);\n    if (!payload.contactNo) throw new BadRequestException();\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contact.html":{"url":"interfaces/Contact.html","title":"interface - Contact","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/contact.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contactNo\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contactNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactNo:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Schema, Document } from 'mongoose';\n\nexport const ContactSchema = new Schema({\n  name: { type: String, required: true },\n  contactNo: { type: Number, required: true },\n});\n\nexport interface Contact extends Document {\n  id: string;\n  name: string;\n  contactNo: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContactController.html":{"url":"controllers/ContactController.html","title":"controller - ContactController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContactController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/contact.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/contact\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMultipleContact\n                            \n                            \n                                    Async\n                                addSingleContact\n                            \n                            \n                                    Async\n                                deleteContact\n                            \n                            \n                                    Async\n                                filterContact\n                            \n                            \n                                    Async\n                                getAllContact\n                            \n                            \n                                    Async\n                                getSingleContact\n                            \n                            \n                                    Async\n                                updateContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addMultipleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMultipleContact(data: ContactDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add-multiple')\n                \n            \n\n            \n                \n                    Defined in src/contact/contact.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ContactDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addSingleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSingleContact(data: ContactDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add')\n                \n            \n\n            \n                \n                    Defined in src/contact/contact.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteContact(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete/:id')\n                \n            \n\n            \n                \n                    Defined in src/contact/contact.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        filterContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterContact(name: string, contact: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('filter')\n                \n            \n\n            \n                \n                    Defined in src/contact/contact.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contact\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllContact(limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all')\n                \n            \n\n            \n                \n                    Defined in src/contact/contact.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSingleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSingleContact(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/contact/contact.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateContact(data: object, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('update/:id')\n                \n            \n\n            \n                \n                    Defined in src/contact/contact.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  Query,\n} from '@nestjs/common';\nimport { ContactService } from './contact.service';\nimport { ContactDto } from './dto/contact.dto';\nimport { Contact } from './contact.schema';\n\n@Controller('api/contact')\nexport class ContactController {\n  constructor(private readonly contactService: ContactService) {}\n\n  @Post('add')\n  async addSingleContact(@Body() data: ContactDto): Promise {\n    return await this.contactService.addSingleContact(data);\n  }\n\n  @Post('add-multiple')\n  async addMultipleContact(\n    @Body() data: ContactDto[],\n  ): Promise {\n    return await this.contactService.addMultipleContact(data);\n  }\n\n  @Get(':id')\n  async getSingleContact(@Param('id') id: string): Promise {\n    return await this.contactService.getSingleContact(id);\n  }\n\n  @Get('all')\n  async getAllContact(\n    @Query('limit') limit: number,\n    @Query('page') page: number,\n  ): Promise {\n    return await this.contactService.getAllContact(page, limit);\n  }\n\n  @Get('filter')\n  async filterContact(\n    @Query('name')\n    name: string,\n    @Query('contact')\n    contact: number,\n  ): Promise {\n    return await this.contactService.filterContact(name, contact);\n  }\n\n  @Put('update/:id')\n  async updateContact(\n    @Body()\n    data: object,\n    @Param('id')\n    id: string,\n  ): Promise {\n    return await this.contactService.updateContact(id, data);\n  }\n\n  @Delete('delete/:id')\n  async deleteContact(\n    @Param('id')\n    id: string,\n  ): Promise {\n    return await this.contactService.deleteContact({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContactDto.html":{"url":"classes/ContactDto.html","title":"class - ContactDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContactDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/dto/contact.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contactNo\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contactNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('IN')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/dto/contact.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/dto/contact.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsPhoneNumber, IsString, MinLength } from 'class-validator';\n\nexport class ContactDto {\n  @IsString()\n  @MinLength(1)\n  name: string;\n\n  @IsPhoneNumber('IN')\n  contactNo: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactModule.html":{"url":"modules/ContactModule.html","title":"module - ContactModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ContactModule\n\n\n\ncluster_ContactModule_imports\n\n\n\ncluster_ContactModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nContactModule\n\nContactModule\n\nContactModule -->\n\nUserModule->ContactModule\n\n\n\n\n\nContactService\n\nContactService\n\nContactModule -->\n\nContactService->ContactModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/contact/contact.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ContactService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ContactController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.module.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { ContactService } from './contact.service';\nimport { ContactController } from './contact.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ContactSchema } from './contact.schema';\nimport { AuthMiddleware } from '../auth/auth.middleware';\nimport { UserService } from '../user/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserModule } from '../user/user.module';\n\n@Module({\n  imports: [\n    UserModule,\n    MongooseModule.forFeature([{ name: 'Contact', schema: ContactSchema }]),\n  ],\n  providers: [ContactService],\n  controllers: [ContactController],\n})\nexport class ContactModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): any {\n    consumer.apply(AuthMiddleware).forRoutes('api');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/contact.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMultipleContact\n                            \n                            \n                                    Async\n                                addSingleContact\n                            \n                            \n                                    Async\n                                deleteContact\n                            \n                            \n                                    Async\n                                filterContact\n                            \n                            \n                                    Async\n                                getAllContact\n                            \n                            \n                                    Async\n                                getSingleContact\n                            \n                            \n                                    Async\n                                updateContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contactModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/contact/contact.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contactModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addMultipleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMultipleContact(data: ContactDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ContactDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addSingleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSingleContact(data: ContactDto)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteContact(id)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        filterContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterContact(name: string, contact: number)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contact\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllContact(page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSingleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSingleContact(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateContact(id, data)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/contact.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Contact } from './contact.schema';\nimport { RuntimeException } from '@nestjs/core/errors/exceptions/runtime.exception';\nimport { NotFoundException } from '@nestjs/common/exceptions';\nimport { ContactDto } from './dto/contact.dto';\n\n@Injectable()\nexport class ContactService {\n  constructor(\n    @InjectModel('Contact')\n    private readonly contactModel: Model,\n  ) {}\n\n  async addSingleContact(data: ContactDto) {\n    const newContact = await this.contactModel.create(data);\n    const contactObject = await newContact.save();\n    if (contactObject.id === null)\n      throw new RuntimeException('Server unable to perform request');\n    return contactObject.id as string;\n  }\n\n  async addMultipleContact(data: ContactDto[]) {\n    let newContact, contactObject;\n    data.map(async (contact) => {\n      newContact = await this.contactModel.create(contact);\n      contactObject = await newContact.save();\n      if (contactObject.id === null)\n        throw new RuntimeException('Server unable to perform request');\n    });\n    return { message: 'data saved successfully' };\n  }\n\n  async getSingleContact(id: string): Promise {\n    const contact = await this.contactModel.findOne({ _id: id }).exec();\n    if (contact === null)\n      throw new NotFoundException(\n        { Error: 'NOT_FOUND', id },\n        'no data exists with id',\n      );\n    return contact;\n  }\n\n  async getAllContact(page: number, limit: number): Promise {\n    if (page === null) page = 1;\n    if (limit === null) limit = 10;\n    const skip = (page - 1) * limit;\n\n    const contact = await this.contactModel\n      .find({})\n      .exists(true)\n      .skip(skip)\n      .limit(limit)\n      .exec();\n    if (contact === null)\n      throw new NotFoundException(\n        { Error: 'NOT_FOUND', page, limit },\n        'Data does not exists',\n      );\n\n    return contact;\n  }\n\n  async filterContact(name: string, contact: number): Promise {\n    const contacts = await this.contactModel\n      .find({ $or: [{ name }, { contact }] }) // { $or: name | contact }\n      .exec();\n    if (contact === null)\n      throw new NotFoundException(\n        { Error: 'NOT_FOUND', name, contact },\n        'no data found for the query',\n      );\n    return contacts;\n  }\n\n  async updateContact(id, data) {\n    const contacts = await this.contactModel.findOneAndUpdate(\n      this.contactModel.findOne(id),\n      this.contactModel.updateOne(data),\n    );\n    if (contacts === null)\n      throw new RuntimeException('Server unable to perform request');\n    return { id: contacts._id, message: 'data have been updated' };\n  }\n\n  async deleteContact(id) {\n    const contact = await this.contactModel.deleteOne({ id });\n    if (contact === null)\n      throw new RuntimeException('Server unable to perform request');\n    return { message: 'data deleted successfully' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contactNo\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contactNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactNo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Schema, Document } from 'mongoose';\n\nexport const UserSchema = new Schema({\n  contactNo: { type: Number, required: true, unique: true },\n  password: { type: String, required: true },\n});\n\nexport interface User extends Document {\n  id: string;\n  contactNo: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserDto } from './dto/user.dto';\n\n@Controller('api/auth')\nexport class UserController {\n  constructor(private readonly authService: UserService) {}\n  @Post('register')\n  async register(@Body() data: UserDto) {\n    return await this.authService.register(data);\n  }\n\n  @Post('login')\n  async login(\n    @Body() data: UserDto,\n  ): Promise {\n    return await this.authService.login(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contactNo\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contactNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('IN')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(8)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsPhoneNumber, IsString, MaxLength, MinLength } from 'class-validator';\n\nexport class UserDto {\n  @IsString()\n  @MinLength(8)\n  @MaxLength(20)\n  password: string;\n\n  @IsPhoneNumber('IN')\n  contactNo: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { JwtModule, JwtService } from '@nestjs/jwt';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema } from './user.schema';\nimport 'dotenv/config';\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: '1d',\n      },\n    }),\n    MongooseModule.forFeature([{ name: 'user', schema: UserSchema }]),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, contactModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contactModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User } from './user.schema';\nimport { NotFoundException } from '@nestjs/common/exceptions';\nimport { UserDto } from './dto/user.dto';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly jwtService: JwtService,\n    @InjectModel('user')\n    private readonly contactModel: Model,\n  ) {}\n\n  async register(data: UserDto): Promise {\n    const user = await this.contactModel.create(data);\n    if (!user)\n      throw new BadRequestException(data, 'could not register new user');\n    await user.save();\n    return { message: 'registration Successfully' };\n  }\n\n  async login(data: UserDto): Promise {\n    const { contactNo, password } = data;\n    try {\n      const user = await this.contactModel.findOne({\n        $and: [{ contactNo }, { password }],\n      });\n      if (!user)\n        throw new NotFoundException(data, 'Credentials does not matched');\n      const token = this.jwtService.sign({ contactNo });\n      return { message: 'login successful', token };\n    } catch (e) {\n      throw new BadRequestException(data, 'Credentials does not matched');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/contact/contact.controller.ts\n            \n            controller\n            ContactController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/contact/contact.schema.ts\n            \n            interface\n            Contact\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/contact/contact.schema.ts\n            \n            variable\n            ContactSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/contact/contact.service.ts\n            \n            injectable\n            ContactService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/contact/dto/contact.dto.ts\n            \n            class\n            ContactDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.schema.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.2\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            dotenv : ^16.0.0\n        \n            mongoose : ^6.2.2\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAddress Book\nDependency\n\nNodeJS (v16.14.0 or newer)\nnpm (v8.3.1 or newer)\nmongodb\n\n\nInstallation\n\nclone the repository\ninstall node dependency run `npm i`\nrun start script `npm start`\n\n\nAPI Documentation\n\n            \n                Prefix\n            \n            \n                api/contact\n            \n            \n    Index\n    \n        \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMultipleContact\n                            \n                            \n                                    Async\n                                addSingleContact\n                            \n                            \n                                    Async\n                                deleteContact\n                            \n                            \n                                    Async\n                                filterContact\n                            \n                            \n                                    Async\n                                getAllContact\n                            \n                            \n                                    Async\n                                getSingleContact\n                            \n                            \n                                    Async\n                                updateContact\n                            \n                        \n                    \n                \n        \n    \n\n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addMultipleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMultipleContact(data: ContactDto[])\n                \n            \n            \n                \n                    Decorators : \n                    \n                    @Post('add-multiple')\n                \n            \n            \n                \n                    Defined in src/contact/contact.controller.ts:25\n                \n            \n            \n                \n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ContactDto[]\n                                    \n                                    \n                                        No\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addSingleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSingleContact(data: ContactDto)\n                \n            \n            \n                \n                    Decorators : \n                    \n                    @Post('add')\n                \n            \n            \n                \n                    Defined in src/contact/contact.controller.ts:20\n                \n            \n   \n                \n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ContactDto\n                                    \n                                    \n                                        No\n                                    \n\n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteContact(id: string)\n                \n            \n            \n                \n                    Decorators : \n                    \n                    @Delete('delete/:id')\n                \n            \n            \n                \n                    Defined in src/contact/contact.controller.ts:65\n                \n            \n    \n                \n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n                                    \n                                        No\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        filterContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterContact(name: string, contact: number)\n                \n            \n            \n                \n                    Decorators : \n                    \n                    @Get('filter')\n                \n            \n            \n                \n                    Defined in src/contact/contact.controller.ts:45\n                \n            \n            \n                \n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n                                    \n                                        No\n                                    \n                                \n                                \n                                    contact\n                                    \n                                                number\n                                                                        \n                                        No\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise                    \n                                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllContact(limit: number, page: number)\n                \n                        \n                \n                    Decorators : \n                    \n                    @Get('all')\n                \n                        \n                \n                    Defined in src/contact/contact.controller.ts:37\n                \n            \n            \n                                    \n                        Parameters :                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                                                        \n                                        No\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                                                        \n                                        No\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise                    \n                                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSingleContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSingleContact(id: string)\n                \n                        \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n                        \n                \n                    Defined in src/contact/contact.controller.ts:32\n                \n            \n            \n                                    \n                        Parameters :                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                                                        \n                                        No\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise                    \n                                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateContact(data: object, id: string)\n                \n                        \n                \n                    Decorators : \n                    \n                    @Put('update/:id')\n                \n                        \n                \n                    Defined in src/contact/contact.controller.ts:55\n                \n            \n            \n                                    \n                        Parameters :                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                object\n                                                                        \n                                        No\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                                                        \n                                        No\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise                    \n                                        \n                \n            \n        \n       \n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ContactModule\n\n\n\ncluster_ContactModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nContactModule\n\nContactModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nContactModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nContactModule -->\n\nUserModule->ContactModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nContactService\n\nContactService\n\nContactModule -->\n\nContactService->ContactModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContactSchema   (src/.../contact.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/contact/contact.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ContactSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema({\n  name: { type: String, required: true },\n  contactNo: { type: Number, required: true },\n})\n                    \n                \n\n\n        \n    \n\n    src/user/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema({\n  contactNo: { type: Number, required: true, unique: true },\n  password: { type: String, required: true },\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
